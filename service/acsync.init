#!/bin/bash
#
# acsync        Startup script for the acsync
# chkconfig: 345 85 15
#
# Source function library.
. /etc/rc.d/init.d/functions

start() {
	# If we want to use a cusom user
	#RUNUSER="root"
	#su - $RUNUSER -c "setsid /opt/acsync/acsync > /dev/null 2>&1 &"
	
	if [ -d /var/run ] && [ -f /var/run/acsync ]; then
		if ps aux | grep `cat /var/run/acsync`; then
			echo Instance of acsync already running
			exit
		fi
	fi
	setsid /opt/acsync/acsync > /dev/null 2>&1 &
	echo Launched acsync
	echo Done.
}

stop() {

	if [ -d /var/run ] && [ -f /var/run/acsync ]; then
		kill -9 `cat /var/run/acsync`
		rm -rf /var/run/acsync
	fi
	
	# Ensure full obliteration
	ps aux | grep /opt/acsync/acsync | grep -v init | awk '{print "ps aux | grep acsync | grep -q \""$2"\" && kill -9 "$2}' |  bash > /dev/null 2>&1
	ps aux | grep acsync | grep inotifywait | awk '{print "ps aux | grep acsync | grep -q \""$2"\" && kill -9 "$2}' |  bash > /dev/null 2>&1
	
	echo Done.
}
status() {

	echo Below is a full list of acsync processes.
	echo
	ps aux | grep /opt/acsync/[a]csync | grep -v grep | grep -v status
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	status
	;;
  restart)
	stop
	start
	;;
  *)
	echo $"Usage: acsync {start|stop|restart|status}"
esac

exit $?
